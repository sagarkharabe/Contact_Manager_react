{"version":3,"sources":["components/layouts/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","About","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","_Component","click","e","showDetails","arrow","delCon","_ref","delete","_x","_x2","_this2","name","onClick","style","cursor","bind","float","color","marginRight","marginTop","email","phone","propType","PropTypes","string","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onchange","error","htmlFor","classnames","is-invalid","onChange","func","object","AddContact","errors","handleChange","target","defineProperty","onSubmit","_this$state","preventDefault","abrupt","post","history","push","_this$state2","EditContact","match","params","put","NotFound","Test","console","log","App","context_Provider","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14a83280.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nexport default function Header(props) {\n  const branding = props.branding;\n  return (\n    <nav className=\" nav navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\n      <a href=\"/\" className=\"navbar-brand\">\n        {branding}\n      </a>\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link to=\"/\" className=\"nav-link\">\n            <i className=\"fas fa-home\" /> HOME\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\" /> ADD CONTACT\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-question\" /> ABOUT\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"Contact Manager\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div className=\"conatainer text-center\">\n      <h2 className=\"display-4\">About Contact Manager</h2>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\"> Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport axios from \"axios\";\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"EDIT_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\nexport class Provider extends React.Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nexport class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDetails: false,\n      arrow: \"fas fa-sort-down\"\n    };\n  }\n\n  click = e => {\n    this.setState({\n      showDetails: !this.state.showDetails,\n      arrow: !this.state.showDetails ? \"fas fa-sort-up\" : \"fas fa-sort-down\"\n    });\n  };\n  delCon = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3 py-auto\">\n              <h4>\n                {this.props.name}{\" \"}\n                <i\n                  onClick={this.click}\n                  style={{ cursor: \"pointer\" }}\n                  className={this.state.arrow}\n                >\n                  {\" \"}\n                </i>\n                <button\n                  onClick={this.delCon.bind(this, this.props.id, dispatch)}\n                  className=\"btn btn-danger\"\n                  style={{ float: \"right\" }}\n                >\n                  &times;\n                </button>\n                <Link to={`contact/edit/${this.props.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"ponter\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                      marginTop: \"3px\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {this.state.showDetails ? (\n                <div className=\"container mb-3\">\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                      Email :{this.props.email}\n                    </li>\n                    <li className=\"list-group-item\">\n                      Phone :{this.props.phone}\n                    </li>\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n\n      //       );\n      //     }}\n      //     >\n    );\n  }\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          return (\n            <React.Fragment>\n              <h2 className=\"display-3 mb-2\">\n                <span className=\"text-info\">Contact</span> List\n              </h2>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  id={contact.id}\n                  name={contact.name}\n                  email={contact.email}\n                  phone={contact.phone}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nexport default function TextInputGroup(props) {\n  const { label, name, value, placeholder, type, onchange, error } = props;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onchange}\n      />\n      {error && <div className=\"invalid-feedback\"> {error} </div>}\n    </div>\n  );\n}\n\nTextInputGroup.propType = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.object.isRequired\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n\nimport axios from \"axios\";\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is Required.\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is Required.\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is Required.\" }\n      });\n      return;\n    }\n\n    const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", {\n      ...this.state\n    });\n  \n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: {\n        ...this.state,\n        id: res.data.id\n      }\n    });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name={\"name\"}\n                    label={\"Name :\"}\n                    value={name}\n                    placeholder={\"Enter name ..\"}\n                    type={\"text\"}\n                    onchange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name={\"email\"}\n                    label={\"Email :\"}\n                    value={email}\n                    placeholder={\"Enter email ..\"}\n                    type={\"email\"}\n                    onchange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name={\"phone\"}\n                    label={\"Phone Number :\"}\n                    value={phone}\n                    placeholder={\"Enter phone ..\"}\n                    type={\"tel\"}\n                    onchange={this.handleChange}\n                    error={errors.phone}\n                  />\n                  <div className=\"container text-center\">\n                    <input\n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-primary btn-lg \"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n\nimport axios from \"axios\";\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is Required.\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is Required.\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is Required.\" }\n      });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      {\n        name,\n        email,\n        phone\n      }\n    );\n\n    dispatch({\n      type: \"EDIT_CONTACT\",\n      payload: {\n        ...this.state,\n        id: res.data.id\n      }\n    });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name={\"name\"}\n                    label={\"Name :\"}\n                    value={name}\n                    placeholder={\"Enter name ..\"}\n                    type={\"text\"}\n                    onchange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name={\"email\"}\n                    label={\"Email :\"}\n                    value={email}\n                    placeholder={\"Enter email ..\"}\n                    type={\"email\"}\n                    onchange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name={\"phone\"}\n                    label={\"Phone Number :\"}\n                    value={phone}\n                    placeholder={\"Enter phone ..\"}\n                    type={\"tel\"}\n                    onchange={this.handleChange}\n                    error={errors.phone}\n                  />\n                  <div className=\"container text-center\">\n                    <input\n                      type=\"submit\"\n                      value=\"Update Contact\"\n                      className=\"btn btn-primary btn-lg \"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h2 className=\"display-3\">\n        <span className=\"text-danger\">404</span> Not Found\n      </h2>\n      <p className=\"lead\">Sorry Page does not exit</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  componentDidMount() {\n    console.log(\"Test loaded\");\n  }\n\n  componentDidMount() {\n    console.log(\"Component will \");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Test Component</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/About\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}